{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "vnet": {
            "type": "object"
        },
        "appendSubnetAddressSpace": {
            "type": "bool"
        }
    },
    "variables": {
        "nsgSuffix": "-NSG",
        "specialSubnets": ["GatewaySubnet", "AzureFirewallSubnet", "AzureBastionSubnet"],

        // Build a new VNet object with the updated subnet and NSG names
        "objVNet": {
            "name": "[parameters('vnet').name]",
            "addressSpace": "[parameters('vnet').addressSpace]",
            "subnets": "[variables('objSubnets')]"
        },

        // Build an object with the updated subnet and NSG names
        "copy": [
            {
                "name": "objSubnets",
                "count": "[length(parameters('vnet').subnets)]",
                "input": {
                    "name": "[function.subnetFullName(parameters('appendSubnetAddressSpace'), parameters('vnet').subnets[copyIndex('objSubnets')].name, parameters('vnet').subnets[copyIndex('objSubnets')].addressSpace)]",
                    "addressSpace": "[parameters('vnet').subnets[copyIndex('objSubnets')].addressSpace]",
                    "nsgName": "[function.nsgName(function.subnetFullName(parameters('appendSubnetAddressSpace'), parameters('vnet').subnets[copyIndex('objSubnets')].name, parameters('vnet').subnets[copyIndex('objSubnets')].addressSpace), variables('nsgSuffix'))]"
                }
            }
        ]
    },
    "functions": [
        {
            // This function appends the subnet's address space to its name (swapping a _ for the /).
            // It does NOT change the name of GatewaySubnet, AzureFirewallSubnet, or AzureBastionSubnet.
            // If the first parameter, append, is false, it will not change the subnet name.
            "namespace": "function",
            "members": {
                "subnetFullName": {
                    "parameters": [
                        {
                            "name": "append",
                            "type": "bool"
                        },
                        {
                            "name": "subnetName",
                            "type": "string"
                        },
                        {
                            "name": "subnetAddressSpace",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[if(or(not(parameters('append')), equals(parameters('subnetName'), 'GatewaySubnet'), equals(parameters('subnetName'), 'AzureFirewallSubnet'), equals(parameters('subnetName'), 'AzureBastionSubnet')), parameters('subnetName'), concat(parameters('subnetName'), '-', replace(parameters('subnetAddressSpace'), '/', '_')))]",
                        "type": "string"
                    }
                },

                // Builds the NSG name for the subnet.
                // Does not append if the subnet is GatewaySubnet, AzureFirewallSubnet, or AzureBastionSubnet
                "nsgName": {
                    "parameters": [
                        {
                            "name": "subnetName",
                            "type": "string"
                        },
                        {
                            "name": "suffix",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[if(or(equals(parameters('subnetName'), 'GatewaySubnet'), equals(parameters('subnetName'), 'AzureFirewallSubnet'), equals(parameters('subnetName'), 'AzureBastionSubnet')), parameters('subnetName'), concat(parameters('subnetName'), parameters('suffix')))]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "resources": [
        // VNet
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('objVNet').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "nsgLoop"
            ],
            "tags": "[resourceGroup().tags]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('objVNet').addressSpace]"
                    ]
                },
                "enableDdosProtection": false
            }
        },

        // Subnets
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('objVNet').name, '/', variables('objVNet').subnets[copyIndex()].name)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('objVNet').name)]"
            ],
            "properties": {
                "addressPrefix": "[variables('objVNet').subnets[copyIndex()].addressSpace]",
                "networkSecurityGroup": 
                    // This mess is necessary because the 'special' subnets don't get an NSG
                    "[if(contains(variables('specialSubnets'), variables('objVNet').subnets[copyIndex()].nsgName), json('null'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/networkSecurityGroups', variables('objVNet').subnets[copyIndex()].nsgName), '\"}')))]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "copy": {
                "count": "[length(variables('objVNet').subnets)]",
                "name": "subnetLoop",
                "mode": "Serial"
            }
        },

        // NSGs
        {
            // Don't add NSGs to the GatewaySubnet, AzureFirewallSubnet, or AzureBastionSubnet
            "condition": "[not(contains(variables('specialSubnets'), variables('objVNet').subnets[copyIndex()].nsgName))]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('objVNet').subnets[copyIndex()].nsgName]",
            "location": "[parameters('location')]",
            "tags": "[resourceGroup().tags]",
            "properties": {
                "securityRules": []
            },
            "copy": {
                "count": "[length(variables('objVNet').subnets)]",
                "name": "nsgLoop"
            }
        }

    ],
    "outputs": {
        "vnetId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]"
        },
        "objVnet": {
            "type": "object",
            "value": "[variables('objVNet')]"
        }
    }
}