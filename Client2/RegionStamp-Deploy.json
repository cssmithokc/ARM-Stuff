{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "assetLocationURI": {
            "type": "string"
        },
        "resourceGroupsRegion": { // Region to use when creating resource groups.  May not be the same as the region to which resources are deployed
            "type": "string",
            "defaultValue": "East US 2",
            "metadata": {
                "description": "Region where resouce groups will be created.  May not be the same as the region to which resources are deployed"
            },
            "allowedValues": [
                "East Asia",
                "Southeast Asia",
                "Central US",
                "East US",
                "East US 2",
                "West US",
                "North Central US",
                "South Central US",
                "North Europe",
                "West Europe",
                "Japan West",
                "Japan East",
                "Brazil South",
                "Australia East",
                "Australia Southeast",
                "South India",
                "Central India",
                "West India",
                "Canada Central",
                "Canada East",
                "UK South",
                "UK West",
                "West Central US",
                "West US 2",
                "Korea Central",
                "Korea South",
                "France Central",
                "France South",
                "Australia Central",
                "Australia Central 2",
                "UAE Central",
                "UAE North",
                "South Africa North",
                "South Africa West",
                "Switzerland North",
                "Switzerland West",
                "Germany North",
                "Germany West Central",
                "Norway West",
                "Norway East",
                "Brazil Southeast"
            ]
        },

        //Resource Group for the hub network
        "hubVNetResourceGroup_Name": {
            "type": "string"
        },
        "hubVNetResourceGroup_Tags": {
            "type": "object",
            "defaultValue": ""
        },
        "hubVNetResourceGroup_SubscriptionId": {
            "type": "string"
        },

        //Resource Group for the prod spoke network
        "prodSpokeVNetResourceGroup_Name": {
            "type": "string"
        },
        "prodSpokeVNetResourceGroup_Tags": {
            "type": "object",
            "defaultValue": ""
        },
        "prodSpokeVNetResourceGroup_SubscriptionId": {
            "type": "string"
        },

        //Resource Group for the hub network
        "nonProdSpokeVNetResourceGroup_Name": {
            "type": "string"
        },
        "nonProdSpokeVNetResourceGroup_Tags": {
            "type": "object",
            "defaultValue": ""
        },
        "nonProdSpokeVNetResourceGroup_SubscriptionId": {
            "type": "string"
        },

        //Resource Group for the storage account
        "storageResourceGroup_Name": {
            "type": "string"
        },
        "storageResourceGroup_Tags": {
            "type": "object",
            "defaultValue": ""
        },
        
        //Hub VNet
        "hubVnet_Name": {
            "type": "String"
        },
        "hubVnet_AddressSpace": {
            "type": "string"
        },
        "hubVnet_gatewaySubnet_AddressSpace": {
            "type": "string"
        },
        "hubVnet_azureFirewallSubnet_AddressSpace": {
            "type": "string"
        },
        "hubVnet_azureBastionSubnet_AddressSpace": {
            "type": "string"
        },
        "hubVnet_subnet1_Name": {
            "type": "string"
        },
        "hubVnet_subnet1_AddressSpace": {
            "type": "string"
        },
        "hubVnet_subnet2_Name": {
            "type": "string"
        },
        "hubVnet_subnet2_AddressSpace": {
            "type": "string"
        },

        //Prod Spoke VNet
        "spoke1Vnet_Name": {
            "type": "String"
        },
        "spoke1Vnet_AddressSpace": {
            "type": "string"
        },
        "spoke1Vnet_subnet1_Name": {
            "type": "string"
        },
        "spoke1Vnet_subnet1_AddressSpace": {
            "type": "string"
        },
        "spoke1Vnet_subnet2_Name": {
            "type": "string"
        },
        "spoke1Vnet_subnet2_AddressSpace": {
            "type": "string"
        },
        "spoke1Vnet_subnet3_Name": {
            "type": "string"
        },
        "spoke1Vnet_subnet3_AddressSpace": {
            "type": "string"
        },

        //NonProd spoke VNet
        "spoke2Vnet_Name": {
            "type": "String"
        },
        "spoke2Vnet_AddressSpace": {
            "type": "string"
        },
        "spoke2Vnet_subnet1_Name": {
            "type": "string"
        },
        "spoke2Vnet_subnet1_AddressSpace": {
            "type": "string"
        },
        "spoke2Vnet_subnet2_Name": {
            "type": "string"
        },
        "spoke2Vnet_subnet2_AddressSpace": {
            "type": "string"
        },
        "spoke2Vnet_subnet3_Name": {
            "type": "string"
        },
        "spoke2Vnet_subnet3_AddressSpace": {
            "type": "string"
        },

        //Storage account for NSG flow logs
        "storageAccount_Name": {
            "type": "string"
        },
        "storageAccount_retentionDays": {
            "type": "int"
        }
    },
    "variables": {
        "constants": {
            "location": "[deployment().location]",
            "templateLocationURI": "[concat(parameters('assetLocationURI'), 'Templates/')]",
            "storageAccountRetentionDays": 30,
            "networkWatcherName": "[concat('NetworkWatcher_', deployment().location)]"
        },
        "deploymentName": "[deployment().name]",
        "deploymentNames": {
            "hubVNetResourceGroup": "[concat(variables('deploymentName'), '-', parameters('hubVNetResourceGroup_Name'))]",
            "spoke1VNetResourceGroup": "[concat(variables('deploymentName'), '-', parameters('prodSpokeVNetResourceGroup_Name'))]",
            "spoke2VNetResourceGroup": "[concat(variables('deploymentName'), '-', parameters('nonProdSpokeVNetResourceGroup_Name'))]",
            "hubVNet": "[concat(variables('deploymentName'), '-HubVNet')]",
            "spoke1VNet": "[concat(variables('deploymentName'), '-Spoke1VNet')]",
            "spoke2VNet": "[concat(variables('deploymentName'), '-Spoke2VNet')]",
            "vneetPeer": "[concat(variables('deploymentName'), '-VNet-Peer-')]",
            "storageAccount": "[concat(variables('deploymentName'), '-Storage')]",
            "networkWatcher": "[concat(variables('deploymentName'), '-NetworkWatcher')]"
        }
    },
    "functions": [
        {
            "namespace": "function",
            "members": {
                // This function appends -NSG onto the supplied parameter which is intended to be the subnet name
                "nsgName": {
                    "parameters": [
                        {
                            "name": "subnetName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('subnetName'), '-NSG')]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "resources": [

        //Resource Groups
        {
            "comments": "Hub network resource group",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').hubVNetResourceGroup]",
            "location": "[parameters('resourceGroupsRegion')]",
            "subscriptionId": "[parameters('hubVNetResourceGroup_SubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2021-04-01",
                            "name": "[parameters('hubVNetResourceGroup_Name')]",
                            "location": "[parameters('resourceGroupsRegion')]",
                            "tags": "[parameters('hubVNetResourceGroup_Tags')]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "Prod spoke network resource group",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').spoke1VNetResourceGroup]",
            "location": "[parameters('resourceGroupsRegion')]",
            "subscriptionId": "[parameters('prodSpokeVNetResourceGroup_SubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2021-04-01",
                            "name": "[parameters('prodSpokeVNetResourceGroup_Name')]",
                            "location": "[parameters('resourceGroupsRegion')]",
                            "tags": "[parameters('prodSpokeVNetResourceGroup_Tags')]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "NonProd spoke network resource group",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').spoke2VNetResourceGroup]",
            "location": "[parameters('resourceGroupsRegion')]",
            "subscriptionId": "[parameters('nonProdSpokeVNetResourceGroup_SubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2021-04-01",
                            "name": "[parameters('nonProdSpokeVNetResourceGroup_Name')]",
                            "location": "[parameters('resourceGroupsRegion')]",
                            "tags": "[parameters('nonProdSpokeVNetResourceGroup_Tags')]"
                        }
                    ]
                }
            }
        },

        //VNets
        {
            "comments": "Hub VNet",
            "name": "[variables('deploymentNames').hubVNet]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('hubVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('hubVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').hubVNetResourceGroup]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'hubVNet.json')]"
                },
                "parameters": {
                    //VNet
                    "vnet_Name": {"value": "[parameters('hubVnet_Name')]"},
                    "vnet_AddressSpace": {"value": "[parameters('hubVnet_AddressSpace')]"},
                    "vnet_Location": {"value": "[variables('constants').location]"},
                    //Subnets
                    "subnet_gatewaySubnet_AddressSpace": {"value": "[parameters('hubVnet_gatewaySubnet_AddressSpace')]"},
                    "subnet_azureFirewallSubnet_AddressSpace": {"value": "[parameters('hubVnet_azureFirewallSubnet_AddressSpace')]"},
                    "subnet_azureBastionSubnet_AddressSpace": {"value": "[parameters('hubVnet_azureBastionSubnet_AddressSpace')]"},
                    "subnet_subnet1_Name": {"value": "[parameters('hubVnet_subnet1_Name')]"},
                    "subnet_subnet1_AddressSpace": {"value": "[parameters('hubVnet_subnet1_AddressSpace')]"},
                    "subnet_subnet2_Name": {"value": "[parameters('hubVnet_subnet2_Name')]"},
                    "subnet_subnet2_AddressSpace": {"value": "[parameters('hubVnet_subnet2_AddressSpace')]"},
                    //NSGs
                    "nsg_subnet1_Name": {"value": "[function.nsgName(parameters('hubVnet_subnet1_Name'))]"},
                    "nsg_subnet2_Name": {"value": "[function.nsgName(parameters('hubVnet_subnet2_Name'))]"}
                }
            }
        },
        {
            "comments": "Prod Spoke VNet",
            "name": "[variables('deploymentNames').spoke1VNet]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('prodSpokeVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('prodSpokeVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').spoke1VNetResourceGroup]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'spokeVNet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    //VNet
                    "vnet_Name": {"value": "[parameters('spoke1Vnet_Name')]"},
                    "vnet_AddressSpace": {"value": "[parameters('spoke1Vnet_AddressSpace')]"},
                    "vnet_Location": {"value": "[variables('constants').location]"},
                    //Subnets
                    "subnet_subnet1_Name": {"value": "[parameters('spoke1Vnet_subnet1_Name')]"},
                    "subnet_subnet1_AddressSpace": {"value": "[parameters('spoke1Vnet_subnet1_AddressSpace')]"},
                    "subnet_subnet2_Name": {"value": "[parameters('spoke1Vnet_subnet2_Name')]"},
                    "subnet_subnet2_AddressSpace": {"value": "[parameters('spoke1Vnet_subnet2_AddressSpace')]"},
                    "subnet_subnet3_Name": {"value": "[parameters('spoke1Vnet_subnet3_Name')]"},
                    "subnet_subnet3_AddressSpace": {"value": "[parameters('spoke1Vnet_subnet3_AddressSpace')]"},
                    //NSGs
                    "nsg_subnet1_Name": {"value": "[function.nsgName(parameters('spoke1Vnet_subnet1_Name'))]"},
                    "nsg_subnet2_Name": {"value": "[function.nsgName(parameters('spoke1Vnet_subnet2_Name'))]"},
                    "nsg_subnet3_Name": {"value": "[function.nsgName(parameters('spoke1Vnet_subnet3_Name'))]"}
                }
            }
        },
        {
            "comments": "NonProd Spoke VNet",
            "name": "[variables('deploymentNames').spoke2VNet]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('nonProdSpokeVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('nonProdSpokeVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').spoke2VNetResourceGroup]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'spokeVNet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    //VNet
                    "vnet_Name": {"value": "[parameters('spoke2Vnet_Name')]"},
                    "vnet_AddressSpace": {"value": "[parameters('spoke2Vnet_AddressSpace')]"},
                    "vnet_Location": {"value": "[variables('constants').location]"},
                    //Subnets
                    "subnet_subnet1_Name": {"value": "[parameters('spoke2Vnet_subnet1_Name')]"},
                    "subnet_subnet1_AddressSpace": {"value": "[parameters('spoke2Vnet_subnet1_AddressSpace')]"},
                    "subnet_subnet2_Name": {"value": "[parameters('spoke2Vnet_subnet2_Name')]"},
                    "subnet_subnet2_AddressSpace": {"value": "[parameters('spoke2Vnet_subnet2_AddressSpace')]"},
                    "subnet_subnet3_Name": {"value": "[parameters('spoke2Vnet_subnet3_Name')]"},
                    "subnet_subnet3_AddressSpace": {"value": "[parameters('spoke2Vnet_subnet3_AddressSpace')]"},
                    //NSGs
                    "nsg_subnet1_Name": {"value": "[function.nsgName(parameters('spoke2Vnet_subnet1_Name'))]"},
                    "nsg_subnet2_Name": {"value": "[function.nsgName(parameters('spoke2Vnet_subnet2_Name'))]"},
                    "nsg_subnet3_Name": {"value": "[function.nsgName(parameters('spoke2Vnet_subnet3_Name'))]"}
                }
            }
        },

        //VNet Peerings
        {
            "comments": "Hub to Prod Spoke",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('deploymentNames').vneetPeer, 'Hub-ProdSpoke')]",
            "resourceGroup": "[parameters('hubVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('hubVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').hubVNet]",
                "[variables('deploymentNames').spoke1VNet]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(parameters('hubVnet_Name'), '/', parameters('hubVnet_Name'), '_to_', parameters('spoke1Vnet_Name'))]",
                            "apiVersion": "2020-11-01",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[reference(variables('deploymentNames').spoke1VNet).outputs.vnetID.value]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": false,
                                "useRemoteGateways": false,
                                "remoteAddressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('spoke1Vnet_AddressSpace')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "comments": "Hub to NonProd Spoke",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('deploymentNames').vneetPeer, 'Hub-NonProdSpoke')]",
            "resourceGroup": "[parameters('hubVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('hubVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').hubVNet]",
                "[variables('deploymentNames').spoke2VNet]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(parameters('hubVnet_Name'), '/', parameters('hubVnet_Name'), '_to_', parameters('spoke2Vnet_Name'))]",
                            "apiVersion": "2020-11-01",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[reference(variables('deploymentNames').spoke2VNet).outputs.vnetID.value]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": false,
                                "useRemoteGateways": false,
                                "remoteAddressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('spoke2Vnet_AddressSpace')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "comments": "Prod Spoke to Hub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('deploymentNames').vneetPeer, 'ProdSpoke-Hub')]",
            "resourceGroup": "[parameters('prodSpokeVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('prodSpokeVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').hubVNet]",
                "[variables('deploymentNames').spoke1VNet]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(parameters('spoke1Vnet_Name'), '/', parameters('spoke1Vnet_Name'), '_to_', parameters('hubVnet_Name'))]",
                            "apiVersion": "2020-11-01",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[reference(variables('deploymentNames').hubVNet).outputs.vnetID.value]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": false,
                                "useRemoteGateways": false,
                                "remoteAddressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('hubVnet_Name')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "comments": "NonProd Spoke to Hub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('deploymentNames').vneetPeer, 'Spoke2-Hub')]",
            "resourceGroup": "[parameters('nonProdSpokeVNetResourceGroup_Name')]",
            "subscriptionId": "[parameters('nonProdSpokeVNetResourceGroup_SubscriptionId')]",
            "location": "[variables('constants').location]",
            "dependsOn": [
                "[variables('deploymentNames').hubVNet]",
                "[variables('deploymentNames').spoke2VNet]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(parameters('spoke2Vnet_Name'), '/', parameters('spoke2Vnet_Name'), '_to_', parameters('hubVnet_Name'))]",
                            "apiVersion": "2020-11-01",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[reference(variables('deploymentNames').hubVNet).outputs.vnetID.value]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": false,
                                "useRemoteGateways": false,
                                "remoteAddressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('hubVnet_Name')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}